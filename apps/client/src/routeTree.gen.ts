/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TosImport } from './routes/tos'
import { Route as SsoCallbackImport } from './routes/sso-callback'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as MailImport } from './routes/mail'
import { Route as IndexImport } from './routes/index'
import { Route as MailInboxImport } from './routes/mail/inbox'

// Create/Update Routes

const TosRoute = TosImport.update({
  id: '/tos',
  path: '/tos',
  getParentRoute: () => rootRoute,
} as any)

const SsoCallbackRoute = SsoCallbackImport.update({
  id: '/sso-callback',
  path: '/sso-callback',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const MailRoute = MailImport.update({
  id: '/mail',
  path: '/mail',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MailInboxRoute = MailInboxImport.update({
  id: '/inbox',
  path: '/inbox',
  getParentRoute: () => MailRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/mail': {
      id: '/mail'
      path: '/mail'
      fullPath: '/mail'
      preLoaderRoute: typeof MailImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/sso-callback': {
      id: '/sso-callback'
      path: '/sso-callback'
      fullPath: '/sso-callback'
      preLoaderRoute: typeof SsoCallbackImport
      parentRoute: typeof rootRoute
    }
    '/tos': {
      id: '/tos'
      path: '/tos'
      fullPath: '/tos'
      preLoaderRoute: typeof TosImport
      parentRoute: typeof rootRoute
    }
    '/mail/inbox': {
      id: '/mail/inbox'
      path: '/inbox'
      fullPath: '/mail/inbox'
      preLoaderRoute: typeof MailInboxImport
      parentRoute: typeof MailImport
    }
  }
}

// Create and export the route tree

interface MailRouteChildren {
  MailInboxRoute: typeof MailInboxRoute
}

const MailRouteChildren: MailRouteChildren = {
  MailInboxRoute: MailInboxRoute,
}

const MailRouteWithChildren = MailRoute._addFileChildren(MailRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/mail': typeof MailRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/sso-callback': typeof SsoCallbackRoute
  '/tos': typeof TosRoute
  '/mail/inbox': typeof MailInboxRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/mail': typeof MailRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/sso-callback': typeof SsoCallbackRoute
  '/tos': typeof TosRoute
  '/mail/inbox': typeof MailInboxRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/mail': typeof MailRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/sso-callback': typeof SsoCallbackRoute
  '/tos': typeof TosRoute
  '/mail/inbox': typeof MailInboxRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/mail'
    | '/signin'
    | '/signup'
    | '/sso-callback'
    | '/tos'
    | '/mail/inbox'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/mail'
    | '/signin'
    | '/signup'
    | '/sso-callback'
    | '/tos'
    | '/mail/inbox'
  id:
    | '__root__'
    | '/'
    | '/mail'
    | '/signin'
    | '/signup'
    | '/sso-callback'
    | '/tos'
    | '/mail/inbox'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MailRoute: typeof MailRouteWithChildren
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  SsoCallbackRoute: typeof SsoCallbackRoute
  TosRoute: typeof TosRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MailRoute: MailRouteWithChildren,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  SsoCallbackRoute: SsoCallbackRoute,
  TosRoute: TosRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/mail",
        "/signin",
        "/signup",
        "/sso-callback",
        "/tos"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/mail": {
      "filePath": "mail.tsx",
      "children": [
        "/mail/inbox"
      ]
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/sso-callback": {
      "filePath": "sso-callback.tsx"
    },
    "/tos": {
      "filePath": "tos.tsx"
    },
    "/mail/inbox": {
      "filePath": "mail/inbox.tsx",
      "parent": "/mail"
    }
  }
}
ROUTE_MANIFEST_END */
